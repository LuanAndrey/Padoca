<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADmBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAABJhJREFUeJzt3EurVWUYwPEnrMjSNGySGVJBH6APYPPKQRezDEqkmtiF
        hC4O1SwnYlKDymuEXYQG0QcI+gINokHzhgqGdyPtedmDCF1nH1zn9J733b8f/OfnvO+z9l577bVXBAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ92QvZh9kx7OT
        WvBOZAeyN7JH5rUrsMjKIH6X/ZVd0//aL9nG6VsEi2NHdiXqHwiz3g/Zyil7BQvq06g/+Pq3X7M1c+4Y
        LJDyzl974HV9P2e3z7FvMFr5zO+0f+m2Y3jrYLxywa/2kGu409mqwd2DEVaHd/8WenloA2GMLVF/uDW9
        74c2EMb4MOoPt6b3+9AGwhjHov5wa3pnhzYQxjgc9Ydb0zsztIEwxu6oP9ya3m9DGwhjPB31h1vTOzG0
        gTDGXdnFqD/gmrtNQxsIYx2K+gOu4f7Ilg/uHox0f3Y+6g+6bty24a2DhVFOMa9G/WHXfys3AN0yx77B
        gnk/vAgspX7K7pxzx2CBlTOB8p1z7eGf5f7OPslum7JXsCjKQyj2Z6ei/sEwS5UfZf2YPTp9i2DxLcs2
        ZNtjcsPQPi1Kb8fkfozV89sWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        xluebcx2Zgezz6UZrhwDO7MnY3JsdOuB7HB2Prsm6brKsXEoWxedeTW7GPUXWGqhC9m26MRHUX9BpRb7
        IBpXXsVqL6LUcq9Fox7MLkX9BZRarnx0Xh8N+irqL57UQ19GY1Zll6P+wkk9VM6k746GbI76iyb11KZo
        yN6ov2BST+2JhhyN+gsm9dSRaEj5Y2svmNRT5S7aZpTTldoLJvXUrmjIc1F/waSeejYasiLcBCQtVOVY
        WhmNKTcv1F44qYeORYPWh18ASmMrvwwsP6Vv0taov4BSy70SjfONgHRzNXXlfy5bw5OApPl2LnspOrM2
        Js9AK/9c7QWWlmJns8+y+6Jjd2RPZO+Gh4JKH2fvZI/H5NgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACadmv2WPZ6tjvbp5muzECZhQ3ZsqBb92YHstPZNekGncr2Z2uCrmzO/oz6
        A6Y2OpNtCrqwM7sa9YdKbVVm5r2gaeVV3MGvm63MzpagSeuyC1F/iNR257K1QXMOR/3hUR99ETRlRXYx
        6g+O+uhStjJoxjNRf2jUV08FzdgT9QdGfbUraMaRqD8w6qtyTYlGHIv6A6O+Oho0Y2/UHxj1VflYSSPK
        zRu1B0Z99XzQjFXZ5ag/NOqjK9nqoCnfRv3BUR99HTTnoXAWoPGVGXo4aNJbUX+A1Hbbg6YdjPpDpDYr
        D5ChA2+GjwOaf2VWvPN3pnyO+yYmV3RrD5iWZuXALxf8yvUjOlW+znkhJjd2HM9OaqY7HpNZKN/zl6+P
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBZ9g9NSpN7
        vcJMKQAAAABJRU5ErkJggg==
</value>
  </data>
</root>